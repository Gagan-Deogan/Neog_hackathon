{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadaa\\\\OneDrive\\\\Desktop\\\\Neog_hackthon\\\\src\\\\Context\\\\LoaderContext\\\\LoaderContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoaderContext = /*#__PURE__*/createContext();\nexport const LoaderProvider = ({\n  children\n}) => {\n  _s();\n\n  const [status, setStatus] = useState(\"IDLE\");\n  return /*#__PURE__*/_jsxDEV(LoaderContext.Provider, {\n    value: {\n      status: status,\n      setStatus: setStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoaderProvider, \"1YvD6Y5YSAoVAnWdiCrgGPwdpgg=\");\n\n_c = LoaderProvider;\nexport const useStatus = () => {\n  _s2();\n\n  return useContext(LoaderContext);\n};\n\n_s2(useStatus, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LoaderProvider\");","map":{"version":3,"sources":["C:/Users/nadaa/OneDrive/Desktop/Neog_hackthon/src/Context/LoaderContext/LoaderContext.jsx"],"names":["createContext","useState","useContext","LoaderContext","LoaderProvider","children","status","setStatus","useStatus"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,MAAD,CAApC;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAEA,MAAV;AAAkBC,MAAAA,SAAS,EAAEA;AAA7B,KAA/B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPM;;GAAMD,c;;KAAAA,c;AAQb,OAAO,MAAMI,SAAS,GAAG,MAAM;AAAA;;AAC7B,SAAON,UAAU,CAACC,aAAD,CAAjB;AACD,CAFM;;IAAMK,S","sourcesContent":["import { createContext, useState, useContext } from \"react\";\r\n\r\nconst LoaderContext = createContext();\r\n\r\nexport const LoaderProvider = ({ children }) => {\r\n  const [status, setStatus] = useState(\"IDLE\");\r\n  return (\r\n    <LoaderContext.Provider value={{ status: status, setStatus: setStatus }}>\r\n      {children}\r\n    </LoaderContext.Provider>\r\n  );\r\n};\r\nexport const useStatus = () => {\r\n  return useContext(LoaderContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}